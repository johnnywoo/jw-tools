#!/usr/local/bin/php
<?

$trac_user = 'agalkin';
$trac_db   = 'trac';

// loading mysql info from .my.cnf
$params = array();
$mysql_defs = `mysql --print-defaults`;
preg_match_all('/--(\w+)=(\S+)/', $mysql_defs, $mm, PREG_SET_ORDER);
foreach($mm as $m) $params[$m[1]] = $m[2];

$host = empty($params['host']) ? 'localhost' : $params['host'];
$user = empty($params['user']) ? `whoami` : $params['user'];
$pass = empty($params['password']) ? '' : $params['password'];

$db = new Kdb_Mysql($host, $user, $pass, 'trac');
$db->query('SET NAMES utf8');

try
{
	switch(empty($argv[1]) ? '' : $argv[1])
	{
		case 'view':
			if(empty($argv[2])) throw new Exception('Need ticket id');
			$ticket = new Trac_Ticket($db, $argv[2]);
			echo str_replace("\r", '', rtrim(show_ticket($ticket->data)))."\n";
			break;

		case 'get': // same as view, but without newline correction
			if(empty($argv[2])) throw new Exception('Need ticket id');
			$ticket = new Trac_Ticket($db, $argv[2]);
			echo show_ticket($ticket->data);
			break;

		case 'times':
			$tickets = array_slice($argv, 2);
			$db->query('SELECT id as __k, changetime FROM ticket WHERE id IN (?@)', $tickets);
			foreach($db->column() as $k=>$v) echo "$k $v\n";
			break;

		case 'save':
			$info = file_get_contents('php://stdin');
			$data = parse_ticket($info, array_slice($argv, 3));

			if(empty($argv[2])) throw new Exception('Need ticket id');
			$id = $argv[2];

			$ticket = new Trac_Ticket($db, $id);
			$xx = $ticket->modify($data, $trac_user);
			echo "saving OK: ".($xx?'modified':'not modified')."\n";

			break;

		default:
			echo "Commands:\n";
			echo "  view  ticket_id\n";
			echo "  get   ticket_id\n";
			echo "  times ticket_id ticket_id ticket_id\n";
			echo "  save  [ticket_id [param:val]]\n";
	}
}
catch(Exception $e)
{
	echo $e->getMessage()."\n";
	exit(1);
}

function show_ticket(array $ticket)
{
	$crlf = strpos($ticket['description'], "\r") ? "\r\n" : "\n";
	$n = max(5, min(80, mb_strlen($ticket['summary'], 'utf8')));

	$s = "Ticket #".$ticket['id']." for ".$ticket['owner'].": ".$ticket['status']." ".$ticket['priority']." ".$ticket['type'].$crlf;
	$s .= $ticket['summary'].$crlf;
	$s .= str_repeat('~', $n).$crlf;

	$s .= $ticket['description'];

	return $s;
}

function parse_ticket($stdin, $cli)
{
	$data = array();
	if(trim($stdin) != '')
	{
		$parts = preg_split("/~{5,}\r?\n/", $stdin, 2);
		if(count($parts) < 2) throw new Exception('Cannot parse ticket info from stdin');

		list($header, $desc) = $parts;
		$data['description'] = $desc;
	}

	foreach($cli as $arg)
	{
		if(!preg_match('/^(type|component|severity|priority|owner|reporter|cc|version|milestone|status|resolution|summary|description|keywords):(\S*)$/', $arg, $m))
		{
			throw new Exception('Cannot parse argument: "'.$arg.'"');
		}
		$data[$m[1]] = $m[2];
	}

	return $data;
}


class Trac_Ticket
{
	/**
	 * @var Kdb
	 */
	private $db;
	public $id = 0;
	public $data = array();

	public function __construct(Kdb $db, $id)
	{
		$this->db = $db;
		$this->id = $id;
		$this->reload();
	}

	public function reload()
	{
		$db = $this->db;
		$db->query('SELECT * FROM ticket WHERE id = ?', $this->id);
		if(!$db->number()) throw new Exception("Ticket not found: ".$this->id);
		$this->data = $db->row();
	}

	// returns false if not modified
	public function modify(array $data, $author, $comment = '')
	{
		$db = $this->db;

		$time = time();
		$set = array();
		foreach($data as $k=>$v)
		{
			if($this->data[$k] == $v) continue;
			$set[] = array($this->id, $time, $author, $k, $this->data[$k], $v);
		}

		if(empty($set)) return false;

		$data['changetime'] = $time;

		// in addition to comments about individual changes
		// we need to add a comment for the changeset itself
		// (in the Glorious Python API you have to do this manually too)
		$set[] = array($this->id, $time, $author, 'comment', count($set) + 1, $comment);

		$db->query('INSERT INTO ticket_change (ticket, time, author, field, oldvalue, newvalue) VALUES ?!', $set);
		$db->query('UPDATE ticket SET ? WHERE id = ?', $data, $this->id);
		return true;
	}
}