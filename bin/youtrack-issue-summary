#!/bin/bash

if [ ! "$url" -o ! "$login" -o ! "$password" ]; then
    if [ ! -f "$HOME/.jw-youtrack" ]; then
        echo "No ~/.jw-youtrack found" >&2
        echo "It should have url=http://youtrack, login=vasya and password=xxx lines" >&2
        echo "Alternatively, you may call $0 like this:" >&2
        echo "url='http://youtrack' login='vasya' password='xxx' $0 $@" >&2
        exit 1
    fi

    source "$HOME/.jw-youtrack"
fi

if [ -z "$1" ]; then
    echo "Usage: $0 IS-123" >&2
    exit 1
fi

issue="$1"

file="$(mktemp)"
trap "rm $file" EXIT

urlencode() {
    LC_ALL=C perl -MURI::Escape -e 'print uri_escape($ARGV[0]);' "$1"
}
htmldecode() {
    php -r 'echo html_entity_decode($argv[1], ENT_QUOTES|ENT_HTML401);' "$1"
}

# login

resp="$( \
    curl --silent --request POST \
        --cookie-jar "$file" \
        --header "Content-Type: application/x-www-form-urlencoded" \
        --data "login=$(urlencode "$login")&password=$(urlencode "$password")" \
        "$url/rest/user/login" \
)"
if ! echo "$resp" | grep -q "<login>ok</login>"; then
    echo "Cannot login to YouTrack" >&2
    echo "$resp" >&2
    exit 1
fi

# command

resp="$( \
    curl --silent --request GET \
        --cookie "$file" --cookie-jar "$file" \
        --header "Content-Type: application/x-www-form-urlencoded" \
        "$url/rest/issue/$(urlencode "$issue")" \
)"
if echo "$resp" | grep -q "<error"; then
    echo "Cannot get issue summary" >&2
    echo "YouTrack says:" >&2
    echo "$resp" | sed -e 's/<[^>]*>//g' >&2
    exit 1
fi
summaryXml="$(echo "$resp" | grep -oE 'name="summary"><value>[^<]+' | cut -d'>' -f3)"
echo "$(htmldecode "$summaryXml")"